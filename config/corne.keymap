/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN     0
#define WIN      1
#define NUM      2
#define CODE     3

&mt {
    tapping-term-ms = <400>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                label = "MAC";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |  GUI |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT | 
//                    | ALT | NUM | SPC |   | ENT | CODE | ALT |
                        bindings = <
   &kp TAB         &kp Q &kp W &kp E &kp R &kp T       &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LGUI        &kp A &kp S &kp D &kp F &kp G       &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &mt LSHFT LPAR  &kp Z &kp X &kp C &kp V &kp B       &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT RPAR
                   &kp LALT &mo NUM &kp SPACE          &kp RET &mo CODE &kp RCTRL
                        >;
                };
                win_layer {
                label = "WIN";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | ALT | NUM | SPC |   | ENT | CODE | ALT |
                        bindings = <
   &kp TAB    &kp Q &kp W &kp E &kp R &kp T       &kp Y   &kp U    &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL  &kp A &kp S &kp D &kp F &kp G       &kp H   &kp J    &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT  &kp Z &kp X &kp C &kp V &kp B       &kp N   &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &kp LALT &mo NUM &kp SPACE      &kp RET &mo CODE &kp RGUI
                        >;
                };
                num_layer {
                label = "NUM FUNC";
// -----------------------------------------------------------------------------------------
// |  ESC |     |  F1 |  F2 |  F3 |  F4 |   |  1  |  2  |  3  |     |     |       |
// |      |     |  F5 |  F6 |  F7 |  F8 |   |  4  |  5  |  6  |     |     |       |
// |      |     |  F9 |  F10|  F11|  F12|   |  7  |  8  |  9  |  0  |     | BTCLR |
//                    |     |     | SPC |   | ENT |     | RCTL|
                        bindings = <
   &kp ESC &trans &kp F1       &kp F2       &kp F3      &kp F4        &kp MINUS &kp N1   &kp N2   &kp N3  &trans   &trans
   &trans  &trans &kp F5       &kp F6       &kp F7      &kp F8        &kp PLUS  &kp N4   &kp N5   &kp N6  &trans   &tog WIN
   &trans  &trans &kp F9       &kp F10      &kp F11     &kp F12       &kp N0    &kp N7   &kp N8   &kp N9  &trans   &trans 
                               &trans       &trans      &kp SPACE     &kp RET  &trans   &kp RCTRL
                        >;
                };

                code_layer {
                label = "CODE";
// -----------------------------------------------------------------------------------------
// | TAB  |HOME |  UP | END | PGUP| BT0 |   |  {  |  }  |  -  |  =  |     |      |
// |      |LEFT |DOWN |RIGHT| PGDN| BT1 |   |  [  |  ]  |  _  |  +  |  \  |  `   |
// |      |     |     | INS | DEL | BT2 |   |  (  |  )  |     |     | "|" |  ~   |
//                    | ALT |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB  &kp HOME   &kp UP     &kp END         &kp PG_UP   &bt BT_PRV    &kp LBRC    &kp RBRC    &kp MINUS  &kp EQUAL &trans   &trans
   &trans   &kp LEFT   &kp DOWN   &kp RIGHT       &kp PG_DN   &bt BT_NXT    &kp LBKT    &kp RBKT    &kp UNDER  &kp PLUS  &kp BSLH &kp GRAVE
   &trans   &trans     &trans     &kp INS         &kp DEL     &bt BT_CLR    &kp LPAR    &kp RPAR    &trans     &trans    &kp PIPE &kp TILDE
                    	          &kp LALT        &trans      &kp SPACE     &kp RET     &trans      &kp RALT
                        >;
                };
        };
};
